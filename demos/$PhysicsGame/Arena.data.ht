type: "$Scene/types/Scene"
data: {
	// array of SceneEntities - this looks suspiciously similar to an AssetTree.
	// Maybe we should have a "ItemTree" be a built-in type. What does a data tree look like then?
	// A data tree is like an asset tree, where each item is a struct instance with an unique name/path.
	// Items may be parented to other items.
	// But before an ItemTree, we can get the main benefits as ItemList and just having a flat hierarchy.
	
	// entities: @ItemList "$Scene/types/SceneEntity"
	entities: {
		"Box": {
			position: { 0, 0, 23 }
			rotation: { 0, 0, 0 }
			scale:    { 1, 1, 1 }
			components: {
				@Type("$Scene/Components/BoxComponent") {
					half_extent: { 1, 1, 1 }
				}
			}
		}
		"Floor": {
			position: { 0, 0, 0 }
			rotation: { 0, 0, 0 }
			scale:    { 1, 1, 1 }
			components: {
				@Type("$Scene/Components/BoxComponent") {
					half_extent: { 5, 5, 0.1 }
				}
			}
		}
		
		/*
		"My box 1": {
			components: { // array of "any"
				@any("PBRRender:Components/MeshComponent") {
					mesh: "Meshes/Box.fbx"
				}
			}
			x: 10
			y: 0
			z: 0
		}
		"My box 2": {
			components: {
				@any("PBRRender:Components/MeshComponent") {
					mesh: "Meshes/Box.fbx"
				}
			}
			x: 0
			y: 0
			z: 50
		}
		"Follower": {
			components: { // array of "any"
				@any("Components/FollowerComponent") {
					target: "My box 1/My parented box"
				}
			}
			x: 0
			y: 0
			z: 50
		}*/
	}
}